View(R2)
?as.asrtests
?predictPlus
diffs
out3 <- augmentedRCBD(data$block, data$gen, data$raw, method.comp = "lsd",
alpha = 0.05, group = TRUE, console = TRUE)
out1 <- augmentedRCBD(data$blk, data$trt, data$y1, method.comp = "lsd",
alpha = 0.05, group = TRUE, console = TRUE)
# Example data
blk <- c(rep(1,7),rep(2,6),rep(3,7))
trt <- c(1, 2, 3, 4, 7, 11, 12, 1, 2, 3, 4, 5, 9, 1, 2, 3, 4, 8, 6, 10)
y1 <- c(92, 79, 87, 81, 96, 89, 82, 79, 81, 81, 91, 79, 78, 83, 77, 78, 78,
70, 75, 74)
y2 <- c(258, 224, 238, 278, 347, 300, 289, 260, 220, 237, 227, 281, 311, 250,
240, 268, 287, 226, 395, 450)
data <- data.frame(blk, trt, y1, y2)
# Convert block and treatment to factors
data$blk <- as.factor(data$blk)
data$trt <- as.factor(data$trt)
str(data)
out1 <- augmentedRCBD(data$blk, data$trt, data$y1, method.comp = "lsd",
alpha = 0.05, group = TRUE, console = TRUE)
# ggplot(data, aes(x = loc, y = predicted.value, fill =loc)) + geom_boxplot() + theme_ipsum(base_family = "Arial", base_size = 12)
wald(US)
diffs <- predictPlus(classify = "FD:year",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
diffs <- predictPlus(classify = "FD:cut",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
View(ST01)
View(ST01[["ADF"]])
data <- ST01[[16]] # starch
str(data)
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
str(data)
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ idv(env):id(gen) + year + cut,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(US)
current.asrt <- as.asrtests(US, NULL, NULL)
diffs <- predictPlus(classify = "FD:loc",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
diffs <- predictPlus(classify = "FD:cut",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
# 4 tables single factor
# plus 6 tables two interactions
# plus 4 tables three interactions
# plus 1 table of four interactions
names(ST0)
# 4 tables single factor
# plus 6 tables two interactions
# plus 4 tables three interactions
# plus 1 table of four interactions
names(ST01)
lev5 <- c("FD","loc","year","cut",
"FD:loc","FD:year","FD:cut","loc:year","loc:cut","year:cut",
"FD:loc:year","FD:loc:cut","loc:year:cut","FD:loc:year:cut")
lev5[3]
diffs <- predictPlus(classify = lev5[3],
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("env","FD","gen","loc","year","cut"))
diffs$vcov
blue <- predict(US, classify="FD", levels=levels(data1$FD), vcov=TRUE,aliased = T)
View(blue)
View(blue[["pvals"]])
summary(diffs)
names(diffs)
diffs$backtransforms
plotPvalues(diffs)
diffs <- predictPlus(classify = "FD:loc:year",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
plotPvalues(diffs)
current.asrt <- as.asrtests(US, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
print(current.asrt$wald.tab)
diffs <- predictPlus(classify = "FD:cut",
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
plotPvalues(diffs)
plotLSDerrors(diffs)
names(diffs)
current.asrt$wald.tab
R6 <- current.asrt$wald.tab
View(R6)
wald.asreml(US)
current.asrt$wald.tab
wald.asreml(US)
# ST0
data <- a6[[2]]
head(data)
data <- data[order(data$row, data$col), ]
wald(US)
wald.asreml(US)
R6 <- wald.asreml(US)
View(R6)
summary(US)
R7 <- summary(US)$varcomp
R7
?rmboundary
current.asrt
current.asrt$test.summary
current.asrt$asreml.obj
1:length(lev5)
diff1 <- list()
diff1 <- list()
for (j in 1:length(lev5)) {
diffs <- predictPlus(classify = lev5[j],
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
diff1[[length(diff1)+1]] <- diffs
}
length(diff1)
names(diff1) <- lev5
View(diff1)
diff1[["FD"]]
R1 <- diffs$predictions
R2 <- diffs$differences
R3 <- diffs$p.differences
R4 <- diffs$sed
View(R1)
diffs
R1 <- diffs$predictions
diffs$predictions
library(xlsx)
install.packages("xlsx")
library(xlsx)
R1 <- diffs$predictions
R2 <- diffs$differences
R3 <- diffs$p.differences
R4 <- diffs$sed
class(R2)
class(R1)
R1 <- as.data.frame(diffs$predictions)
R2 <- as.data.frame(diffs$differences)
R3 <- as.data.frame(diffs$p.differences)
R4 <- as.data.frame(diffs$sed)
View(R1)
View(R2)
View(R2)
write.xlsx(R1, file="~/Documents/git/Dreger_2022/statistical_results/assay.xlsx", sheetName="predictions", row.names=F)
write.xlsx(R2, file="~/Documents/git/Dreger_2022/statistical_results/assay.xlsx", sheetName="differences", append=T, row.names=T)
write.xlsx(R3, file="~/Documents/git/Dreger_2022/statistical_results/assay.xlsx", sheetName="p.differences", append=T, row.names=T)
write.xlsx(R4, file="~/Documents/git/Dreger_2022/statistical_results/assay.xlsx", sheetName="diffs$sed", append=T, row.names=T)
View(R3)
diffs$p.differences
names(diff1)
1:length(diff1)
diff1[1]$p.differences
diff1[[1]]$p.differences
setwd("~/Documents/git/Dreger_2022/statistical_results/")
library(dplyr)
library(xlsx)
example <- data.frame('Group' = c('building 1', 'building 1',
'building 2', 'building 2'),
'Subgroup' = c('Active','Inactive','Active','Inactive'),
'Value' = c('abc','def','ghi','jkl'))
View(example)
example %>%
mutate_if(is.factor, as.character) %>%
split(., .$Group) %>%
lapply(., function(x) split(x, x$Subgroup)) %>%
lapply(., function(dat)
lapply(dat, function(dat.sub)
)
example %>%
mutate_if(is.factor, as.character) %>%
split(., .$Group) %>%
lapply(., function(x) split(x, x$Subgroup))
E1 <- example %>%
mutate_if(is.factor, as.character) %>%
split(., .$Group) %>%
lapply(., function(x) split(x, x$Subgroup))
View(E1)
paste0(as.character(unique(dat.sub$Group))
)
lapply(E1, function(dat)
lapply(dat, function(dat.sub)
write.xlsx(dat.sub,
file = paste0(as.character(unique(dat.sub$Group)), ".xlsx"),
sheetName = paste0(as.character(unique(dat.sub$Subgroup))),
append = TRUE, row.names = FALSE)))
diff2 <- list()
1:length(diff1)
diff2 <- list()
for (i in 1:length(diff1)) {
R3 <- as.data.frame(diff1[[i]]$p.differences)
diff2[[length(diff2)+1]] <- R3
}
View(diffs)
View(diff2)
length(diff2)
lev5
names(diff2) <- lev5
View(diff2)
View(diff2)
View(diff2)
View(E1)
str(diff2)
summary(diff2)
lapply(diff2, function(dat.sub)
write.xlsx(dat.sub,
file = paste0(as.character(unique(dat.sub$Group)), ".xlsx"),
sheetName = paste0(as.character(unique(dat.sub$Subgroup))),
append = TRUE, row.names = FALSE))
library(dplyr)
library(xlsx)
class(R2)
class(R1)
library(xlsx)
names(diff2)
diff3 <- list()
1:length(diff1)
diff3 <- list()
for (i in 1:length(diff1)) {
R3 <- as.data.frame(diff1[[i]]$predictions)
diff3[[length(diff3)+1]] <- R3
}
length(diff3)
names(diff3) <- lev5
View(diff3)
diff4 <- list(diff2, diff3)
View(diff4)
names(diff4) <- c("p.differences","predictions")
View(diff4)
lapply(diff4, function(dat)
lapply(dat, function(dat.sub)
write.xlsx(dat.sub,
file = paste0(as.character(unique(dat.sub$Group)), ".xlsx"),
sheetName = paste0(as.character(unique(dat.sub$Subgroup))),
append = TRUE, row.names = FALSE)))
Q
1:diff2
1:length(diff2)
diff5 <- split(diff4, .$Group) %>%
lapply(., function(x) split(x, x$Subgroup))
library(tidyverse)
diff5 <- split(diff4, .$Group) %>%
lapply(., function(x) split(x, x$Subgroup))
example
E1 <- example %>%
mutate_if(is.factor, as.character) %>%
split(., .$Group) %>%
lapply(., function(x) split(x, x$Subgroup))
View(E1)
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
names(diff2)
lapply(names(diff2), function(x) write.xlsx(myList[[x]], 'output.xlsx', sheetName=x, append=TRUE))
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(x) write.xlsx(diff2[[x]], 'output.xlsx', sheetName=x, append=TRUE))
View(diff2)
View(diff2)
View(diff2[["FD:loc"]])
names(diff2)
lev5
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(i) write.xlsx(diff2[[i]], 'output.xlsx', sheetName=lev5[i], append=T, row.names=T))
lev5
names(diff2)
lev5
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(x) write.xlsx(diff2[[x]], 'output.xlsx', sheetName=x, append=T, row.names=T))
lev5 <- c("FD","loc","year","cut",
"FD_loc","FD_year","FD_cut","loc_year","loc_cut","year_cut",
"FD_loc_year","FD_loc_cut","loc_year_cut","FD_loc_year_cut")
names(diff2) <- lev5
names(diff2)
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(x) write.xlsx(diff2[[x]], 'output.xlsx', sheetName=x, append=T, row.names=T))
library(reshape2)
R2 <- melt(diffs$p.differences)
View(R2)
class(R2)
R3 <- R2 %>% dplyr::filter(value < 0.05)
View(R3)
View(diff2)
View(diff2[["year"]])
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(x) write.xlsx(diff2[[x]], 'output.xlsx', sheetName=x, append=T, row.names=T, na = ""))
View(R3)
View(R4)
?write.xlsx
write.xlsx(R4, file="~/Documents/git/Dreger_2022/statistical_results/assay.xlsx", sheetName="differences", append=T, row.names=T, showNA = F)
wb <- createWorkbook()
saveWorkbook(wb, 'output.xlsx')
lapply(names(diff2), function(x) write.xlsx(diff2[[x]], 'output.xlsx', sheetName=x, append=T, row.names=T, showNA = F))
names(ST01)
data <- ST01[[1]] # ADF
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
str(data)
lev4
lev6 <- c("FD","loc","year","cut",
"FD:loc","FD:year","FD:cut","loc:year","loc:cut","year:cut",
"FD:loc:year","FD:loc:cut","loc:year:cut","FD:loc:year:cut")
names(ST01)
data <- ST01[[1]] # ADF
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
str(data)
lev6 <- c("FD","loc","year","cut",
"FD:loc","FD:year","FD:cut","loc:year","loc:cut","year:cut",
"FD:loc:year","FD:loc:cut","loc:year:cut","FD:loc:year:cut")
lev5 <- c("FD","loc","year","cut",
"FD_loc","FD_year","FD_cut","loc_year","loc_cut","year_cut",
"FD_loc_year","FD_loc_cut","loc_year_cut","FD_loc_year_cut")
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ idv(env):id(gen) + year + cut,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ idv(env):id(gen) + year + cut,
data = data, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
current.asrt <- as.asrtests(US, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
library(asremlPlus)
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ idv(env):id(gen) + year + cut,
data = data, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
current.asrt <- as.asrtests(US, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
rm(current.asrt)
current.asrt <- as.asrtests(US, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
1:length(lev6)
lev5
# data$env <- as.factor(data$env)
rm(ST1)
rm(ST2)
ST1 <- list()
for (i in 1:(length(ST01))) {
data <- ST01[[i]]
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
data1 <- na.omit(data)
head(data1)
#
#   FA_1 <- asreml::asreml(fixed = predicted.value ~ 1 + gen,
#                          random = ~ fa(env, 1):id(gen) + loc + year + cut,
#                          data = data1, na.action = list(x = "include", y = "include"),
#                          weights = weight, family = asreml::asr_gaussian(dispersion = 1))
#   FA_1 <- update.asreml(FA_1)
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ idv(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
# wald(US)
current.asrt <- as.asrtests(US, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = US,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year","cut"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST1[[length(ST1)+1]] <- ST2
}
length(ST1)
length(ST01)
names(ST01)
names(ST1) <- names(ST01)
View(ST1)
View(ST1)
1:length(ST1)
data <- ST1[[1]]
View(data)
data[1]
data[1][1]
data[1][[1]]
data[[1]][[1]]
data1 <- data[[1]][[1]]
View(data1)
data2 <- data[[1]]
View(data2)
data1 <- data[[1]][[3]]
data1
names(data)
names(data[[1]])
data1 <- data[[1]][[4]]
View(data1)
lev6
1:length(lev5)
lev5
data1 <- data[[1]][[4]]
View(data1)
lev5
ST1[[1]]
names(ST1[[1]])
names(ST1)
names(ST1[1])
names(data[[1]])
paste0(names(ST1[1]), 'p.differences.xlsx')
paste0(names(ST1[1]), '.p.differences.xlsx')
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences/")
for (i in 1:length(ST1)) {
data <- ST1[[i]]
ST4 <- list()
for (j in 1:length(lev5)) {
data1 <- data[[j]][[4]]
ST4[[length(ST4)+1]] <- data1
}
names(ST4) <- lev5
wb <- createWorkbook()
saveWorkbook(wb, paste0(names(ST1[i]), '.p.differences.xlsx'))
lapply(names(ST4), function(x) write.xlsx(ST4[[x]], paste0(names(ST1[i]), '.p.differences.xlsx'), sheetName=x, append=T, row.names=T, showNA = F))
}
View(data1)
data1 <- melt(data1)
View(data1)
data1 <- na.omit(data1)
View(data1)
colnames(data1)[3]
colnames(data1)[3] <- "p_value"
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences_melt/")
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences_melt/")
for (i in 1:length(ST1)) {
data <- ST1[[i]]
ST4 <- list()
for (j in 1:length(lev5)) {
data1 <- data[[j]][[4]]
data1 <- melt(data1)
data1 <- na.omit(data1)
colnames(data1)[3] <- "p_value"
ST4[[length(ST4)+1]] <- data1
}
names(ST4) <- lev5
wb <- createWorkbook()
saveWorkbook(wb, paste0(names(ST1[i]), '.p.differences_melt.xlsx'))
lapply(names(ST4), function(x) write.xlsx(ST4[[x]], paste0(names(ST1[i]), '.p.differences_melt.xlsx'), sheetName=x, append=T, row.names=T, showNA = F))
}
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences_melt/")
for (i in 1:length(ST1)) {
data <- ST1[[i]]
ST4 <- list()
for (j in 1:length(lev5)) {
data1 <- data[[j]][[4]]
data1 <- melt(data1)
data1 <- na.omit(data1)
colnames(data1)[3] <- "p_value"
ST4[[length(ST4)+1]] <- data1
}
names(ST4) <- lev5
wb <- createWorkbook()
saveWorkbook(wb, paste0(names(ST1[i]), '.p.differences_melt.xlsx'))
lapply(names(ST4), function(x) write.xlsx(ST4[[x]], paste0(names(ST1[i]), '.p.differences_melt.xlsx'), sheetName=x, append=T, row.names=F, showNA = F))
}
1:length(lev5)
names(data[[1]])
data1 <- data[[1]][[1]]
View(data1)
setwd("~/Documents/git/Dreger_2022/statistical_results/predictions/")
View(data1)
lev5
setwd("~/Documents/git/Dreger_2022/statistical_results/predictions/")
for (i in 1:length(ST1)) {
data <- ST1[[i]]
ST4 <- list()
for (j in 1:length(lev5)) {
data1 <- data[[j]][[1]]
ST4[[length(ST4)+1]] <- data1
}
names(ST4) <- lev5
wb <- createWorkbook()
saveWorkbook(wb, paste0(names(ST1[i]), '.predictions.xlsx'))
lapply(names(ST4), function(x) write.xlsx(ST4[[x]], paste0(names(ST1[i]), '.predictions.xlsx'), sheetName=x, append=T, row.names=F, showNA = F))
}
wald(US)
1:(length(ST01))
wald(US)
library(tidyverse)
library(ggcorrplot)
library(patchwork)
library(Matrix)
library(asreml)
library(asremlPlus)
wald(US)
a1 <- wald(US)
class(a1)
a1 <- wald.asreml(US)
class(a1)
View(a1)
