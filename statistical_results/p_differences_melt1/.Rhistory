wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env4"))
df <- as.data.frame(diffs[[1]])
levels(df$env4)
ggplot(df, aes(x=env4, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values Lignin", x = "")
View(df)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env1):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env1:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env1"))
df <- as.data.frame(diffs[[1]])
ggplot(df, aes(x=env1, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values Lignin", x = "")
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env3:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3"))
df <- as.data.frame(diffs[[1]])
ggplot(df, aes(x=env3, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values Lignin", x = "")
data <- droplevels(ST02[[15]]) # NDFD30
head(data)
View(data)
data1 <- na.omit(data)
head(data1)
str(data1)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env3:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3"))
df <- as.data.frame(diffs[[1]])
levels(df$env4)
head(df)
ggplot(df, aes(x=env3, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values Lignin", x = "")
lev6 <- c("FD","loc","year","env3",
"FD:loc","FD:year","FD:env3","loc:year","loc:env3",
"FD:loc:year","FD:loc:env3")
lev5 <- c("FD","loc","year","year_cut",
"FD_loc","FD_year","FD_year_cut","loc_year","loc_year_cut",
"FD_loc_year","FD_loc_year_cut")
summary(M2)$varcomp
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year + cut,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
names(ST02)
names(ST02)
ST03 <- ST02[,-c(15,16,21)]
ST03 <- ST02[-c(15,16,21)]
names(ST03)
summary(M2)$varcomp
W2 <- summary(M2)$varcomp
class(W2)
View(W2)
ST1 <- list()
ST3 <- list()
ST4 <- list()
#############
lev6 <- c("FD","loc","year","cut",
"FD:loc","FD:year","FD:cut","loc:year","loc:cut","year:cut",
"FD:loc:year","FD:loc:cut","loc:year:cut","FD:loc:year:cut")
lev5 <- c("FD","loc","year","cut",
"FD_loc","FD_year","FD_cut","loc_year","loc_cut","year_cut",
"FD_loc_year","FD_loc_cut","loc_year_cut","FD_loc_year_cut")
names(ST03)
ST1 <- list()
ST3 <- list()
ST4 <- list()
for (i in 1:(length(ST03))) {
data <- ST03[[i]]
data1 <- na.omit(data)
head(data1)
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year * cut,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST3[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST4[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST1[[length(ST1)+1]] <- ST2
}
ST1 <- list()
ST3 <- list()
ST4 <- list()
for (i in 1:(length(ST03))) {
data <- ST03[[i]]
data1 <- na.omit(data)
head(data1)
# M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
#                      random = ~ us(loc):ar1(env3):id(gen) + year,
#                      data = data1, na.action = list(x = "include", y = "include"),
#                      weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year * cut,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST3[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST4[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST1[[length(ST1)+1]] <- ST2
}
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year + month,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
head(data1)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year + env5,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env3):id(gen) + year * env5,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
W2 <- summary(M2)$varcomp
W2
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env3:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3", "env5"))
df <- as.data.frame(diffs[[1]])
head(df)
ggplot(df, aes(x=env3, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values", x = "")
head(data1)
data <- ST02[[1]] # ADF
head(data)
#############
lev6 <- c("FD","loc","year","month",
"FD:loc","FD:year","FD:month","loc:year","loc:month","year:month",
"FD:loc:year","FD:loc:month","loc:year:month","FD:loc:year:month")
lev5 <- c("FD","loc","year","month",
"FD_loc","FD_year","FD_month","loc_year","loc_month","year_month",
"FD_loc_year","FD_loc_month","loc_year_month","FD_loc_year_month")
ST1 <- list()
ST3 <- list()
ST4 <- list()
#############
lev6 <- c("FD","loc","year","env5",
"FD:loc","FD:year","FD:env5","loc:year","loc:env5","year:env5",
"FD:loc:year","FD:loc:env5","loc:year:env5","FD:loc:year:env5")
ST1 <- list()
ST3 <- list()
ST4 <- list()
for (i in 1:(length(ST03))) {
data <- ST03[[i]]
data1 <- na.omit(data)
head(data1)
# M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
#                      random = ~ us(loc):ar1(env3):id(gen) + year,
#                      data = data1, na.action = list(x = "include", y = "include"),
#                      weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year * env5,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST3[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST4[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","env4", "env5"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST1[[length(ST1)+1]] <- ST2
}
length(ST1)
length(ST03)
names(ST1) <- names(ST03)
names(ST3) <- names(ST03)
names(ST4) <- names(ST03)
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences_melt1/")
1:length(ST1)
names(ST1)
ST04 <- ST02[c(15,16,21)]
View(ST4)
View(ST04)
ST04 <- ST02[c(15,16,21)]
ST5 <- list()
ST6 <- list()
ST7 <- list()
for (i in 1:(length(ST04))) {
data <- ST04[[i]]
data1 <- na.omit(data)
head(data1)
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
# M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
#                      random = ~ us(loc):ar1(env4):id(gen) + year * env5,
#                      data = data1, na.action = list(x = "include", y = "include"),
#                      weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST5[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST6[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","env4"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST7[[length(ST1)+1]] <- ST2
}
head(data1)
data <- droplevels(ST02[[21]]) # TTNDFD
data1 <- na.omit(data)
head(data1)
str(data1)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
W2 <- summary(M2)$varcomp
class(W2)
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env4:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env4"))
df <- as.data.frame(diffs[[1]])
head(df)
data <- droplevels(ST02[[15]]) # NDFD30
data1 <- na.omit(data)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
names(ST02)
data <- droplevels(ST02[[16]]) # NDFD30
data1 <- na.omit(data)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
ST04 <- ST02[c(15,16,21)]
ST5 <- list()
ST6 <- list()
ST7 <- list()
head(data1)
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
W2 <- summary(M1)$varcomp
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- as.asrtests(M2, NULL, NULL)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
W2 <- summary(M2)$varcomp
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
View(data1)
data <- droplevels(ST02[[21]]) # TTNDFD
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ fa(loc, 1):ar1(env4):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):id(gen) + env5,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
head(data1)
View(data1)
data <- droplevels(ST02[[21]]) # TTNDFD
data1 <- na.omit(data)
head(data1)
str(data1)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ us(loc):id(gen) + env5,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ us(env3):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env3:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year", "env3"))
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ us(loc):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ us(loc):ar1(year):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:year:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","year"))
df <- as.data.frame(diffs[[1]])
head(df)
ggplot(df, aes(x=year, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values", x = "")
View(ST4)
ST4[["ADF"]]
ST4[["Cprot"]]
ST4[["dNDF30"]]
ST4[["dNDF30"]]
ST4[["Su_ESC"]]
ST4[["Su_WSC"]]
View(ST1)
ST1[["Su_ESC"]][["FD"]]
ST1[["Starch"]][["FD"]]
ST1[["Starch"]][["month"]]
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ us(loc):ar1(env4):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)$varcomp
current.asrt <- as.asrtests(M2, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
diffs <- predictPlus(classify = "FD:env4:loc",
asreml.obj = M2,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","env4"))
df <- as.data.frame(diffs[[1]])
head(df)
ggplot(df, aes(x=env4, y=predicted.value, group=FD, color=FD)) +
geom_line(alpha = 0.6) +
geom_point(alpha = 0.6)+
geom_errorbar(aes(ymin=predicted.value - standard.error,ymax=predicted.value+standard.error), width = 0.1, alpha = 0.6) + theme_bw(base_family = "Arial", base_size = 14) + facet_grid(loc ~ ., scales = "free_x", space = "free") + theme(axis.text.x = element_text(angle = 90, hjust = 0.95, vjust = 0.2)) + labs(y = "Predicted Values", x = "")
ST04 <- ST02[c(15,16,21)]
ST5 <- list()
ST6 <- list()
ST7 <- list()
lev6 <- c("FD","loc","year","env4",
"FD:loc","FD:year","FD:env4","loc:year","loc:env4",
"FD:loc:year","FD:loc:env4")
lev5 <- c("FD","loc","year","year_month",
"FD_loc","FD_year","FD_year_month","loc_year","loc_year_month",
"FD_loc_year","FD_loc_year_month")
ST5 <- list()
ST6 <- list()
ST7 <- list()
for (i in 1:(length(ST04))) {
data <- ST04[[i]]
data1 <- na.omit(data)
head(data1)
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
# M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
#                      random = ~ us(loc):ar1(env4):id(gen) + year * env5,
#                      data = data1, na.action = list(x = "include", y = "include"),
#                      weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST5[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST6[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","env4"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
ST7[[length(ST1)+1]] <- ST2
}
data <- droplevels(ST02[[21]]) # TTNDFD
data1 <- na.omit(data)
head(data1)
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(loc):ar1(env4):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
W1 <- wald.asreml(M1)
ST5[[length(ST3)+1]] <- W1
W2 <- summary(M1)$varcomp
ST6[[length(ST4)+1]] <- W1
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt <- rmboundary.asrtests(current.asrt)
ST2 <- list()
for (j in 1:length(lev6)) {
diffs <- predictPlus(classify = lev6[j],
asreml.obj = M1,
wald.tab = current.asrt$wald.tab,
present = c("FD","gen","loc","env4"))
ST2[[length(ST2)+1]] <- diffs
}
names(ST2) <- lev5
View(ST3)
ST3[[length(ST3)+1]] <- W1
ST4[[length(ST4)+1]] <- W1
ST1[[length(ST1)+1]] <- ST2
names(ST1)[18]
names(ST1)[19]
View(ST1)
names(ST1)[19] <- "TTNDFD"
names(ST3)[19] <- "TTNDFD"
names(ST4)[19] <- "TTNDFD"
View(ST1)
setwd("~/Documents/git/Dreger_2022/statistical_results/p_differences_melt1/")
View(ST3)
lapply(names(ST3), function(x) write.xlsx(ST3[[x]], 'dreger.wald.1.xlsx', sheetName=x, append=T, row.names=T, showNA = F))
save.image("~/Documents/git/Dreger_2022/tidy_Dreger1.RData")
