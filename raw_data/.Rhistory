+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
anova(mod5)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1, family = binomial)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1, family = binomial, nAGQ = 0)
## generalized linear mixed model
library(lattice)
xyplot(incidence/size ~ period|herd, cbpp, type=c('g','p','l'),
layout=c(3,5), index.cond = function(x,y)max(y))
(gm1 <- glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
data = cbpp, family = binomial))
anova(gm1)
fixef(mod3)
ranef(mod3)
ls_means(mod3)
ls_means(mod3, pairwise = T)
ls1 <- difflsmeans(mod3, which = NULL, ddf="Satterthwaite")
View(ls1)
write.csv(ls1, "~/Documents/git/Dreger_2022/stats_1/ls1.csv", quote = F, row.names = T)
write.csv(ls1, "~/Documents/git/Dreger_2022/statistical_results/ls1.csv", quote = F, row.names = T)
sqrt(57.5088)
sqrt(303.151)
303.15 + 2*(57.5088)
303.15 - 2*(57.5088)
sessionInfo()
?glmer
mod4 <- lmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
summary(mod4)
summary(mod5)
mod3 <- lmer(predicted.value ~ FD + loc + FD:loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
summary(mod3)
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
anova(mod4)
mod5 <- glmer(predicted.value ~ FD * loc * cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year + cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year * cut
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * year * (1|cut)
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * year * (1|cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year *cut * (1|cut)
, data = data1)
anova(mod4)
ls_means(mod4, pairwise = T)
rm(list = ls())
library(tidyverse)
library(ggcorrplot)
library(patchwork)
library(Matrix)
library(asreml)
library(asremlPlus)
setwd("~/Documents/git/Dreger_2022/raw_data/")
b1 <- read.csv("cols_rows1.csv")
head(b1)
a1 <- read.csv("pheno1.csv")
a2 <- read.csv("all_19.csv")
a3 <- read.csv("all_18.csv")
colnames(a1) # 18 and 19 cut 1
colnames(a2) # 19
colnames(a3) # 18
a1$Cutting <- 1
colnames(a1)[7] <- "Year"
Variety_a2 <- a2[,c(2,3)]
Variety_a3 <- a3[,c(2,3)]
common_ID <- intersect(Variety_a2$ID, Variety_a3$ID)
common_ID
a2$Year <- 2019
a3$Year <- 2018
a1 <- a1[,-c(2:6,19:21)]
a1 <- a1[,c(1,14,2,3:11,13,12)]
colnames(a1)
a2 <- a2[,-c(1,3,12:15,20:22)]
a2 <- a2[,c(1,2,14,3:13)]
colnames(a2)
a3 <- a3[,-c(3,12:15)]
a3 <- a3[,c(2,3,1,4:14)]
colnames(a3)
a4 <- rbind(a1, a2, a3)
a4 <- a4 %>% dplyr::filter(ID %in% common_ID) %>% gather(key = "trait", value = "raw", 4:14)
a5 <- inner_join(b1, a4, by = "ID")
head(a5)
# a5 <- a5 %>% unite("env", c(loc, Year, Cutting), sep = "_", remove = F)
lev1 <- colnames(a5)[1:10]
lev1
a5[,lev1] <- lapply(a5[,lev1], factor)
str(a5)
levels(a5$trait)
summary(a5$gen)
View(a5)
c201 <- a5 %>% dplyr::filter(gen %in% c(201))
c202 <- a5 %>% dplyr::filter(gen %in% c(202))
head(c201)
c201 <- c201[,-c(3:7)]
colnames(c201)[6] <- "cov1"
c202 <- c202[,-c(3:7)]
colnames(c202)[6] <- "cov2"
a6 <- a5 %>% left_join(., c201, by= c("loc", "block", "Cutting", "Year", "trait")) %>% left_join(., c202, by= c("loc", "block", "Cutting", "Year", "trait")) %>% unite("env", c(loc, Year, Cutting, trait), sep = "_", remove = F)
head(a6)
View(a6)
levels(a6$trait)
a7 <- a6 %>% dplyr::filter(trait %in% c("Cprot"))
a7 <- droplevels(a7)
str(a7)
a7$env ,- as.factor(a7$env)
str(a7)
a7$env <- as.factor(a7$env)
str(a7)
View(b1)
View(a7)
levels(a6$trait)
a7 <- a6 %>% dplyr::filter(trait %in% c("ADF"))
a7$env <- as.factor(a7$env)
a7 <- droplevels(a7)
str(a7)
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin"))
a7$env <- as.factor(a7$env)
a7 <- droplevels(a7)
str(a7)
View(a7)
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin")) %>% %>% dplyr::filter(Year %in% c("2019"))
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin")) %>% dplyr::filter(Year %in% c("2019"))
a7 <- droplevels(a7)
a7$env <- as.factor(a7$env)
a7 <- droplevels(a7)
str(a7)
View(a7)
View(c201)
c201 <- a5 %>% dplyr::filter(gen %in% c(201))
View(c201)
head(c201)
View(a5)
c201 <- c201[,-c(3:7)]
colnames(c201)[6] <- "cov1"
a6 <- a5 %>% inner_join(., c201, by= c("loc", "block", "Cutting", "Year", "trait"))
View(a6)
c201 <- a5 %>% dplyr::filter(gen %in% c(201))
c202 <- a5 %>% dplyr::filter(gen %in% c(202))
c201 <- c201[,-c(3:7)]
colnames(c201)[6] <- "cov1"
c202 <- c202[,-c(3:7)]
colnames(c202)[6] <- "cov2"
a6 <- a5 %>% inner_join(., c201, by= c("loc", "block", "Cutting", "Year", "trait")) %>% inner_join(., c202, by= c("loc", "block", "Cutting", "Year", "trait")) %>% unite("env", c(loc, Year, Cutting, trait), sep = "_", remove = F)
head(a6)
View(a6)
a6 <- split(a6[,-1], a6$env)
View(a6)
View(a6[["WA_2018_2_Lignin"]])
View(a6[["WA_2019_2_Lignin"]])
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin"))
a6 <- a5 %>% inner_join(., c201, by= c("loc", "block", "Cutting", "Year", "trait")) %>% inner_join(., c202, by= c("loc", "block", "Cutting", "Year", "trait")) %>% unite("env", c(loc, Year, Cutting, trait), sep = "_", remove = F)
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin"))
a7$env <- as.factor(a7$env)
a7 <- droplevels(a7)
str(a7)
data <- a7
head(data)
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen,
data = data,
na.action = list(x = "include", y = "include"))
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen * year * cut,
data = data,
na.action = list(x = "include", y = "include"))
head(data)
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
m5 <- testranfix.asrtests(m3, "units", positive = T, IClikelihood = "full")
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen * Year * Cutting,
residual = ~ar1(row):ar1(col),
data = data,
na.action = list(x = "include", y = "include"))
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen * Year * Cutting,
residual = ~id(row):id(col),
data = data,
na.action = list(x = "include", y = "include"))
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc,
random = ~ block * gen * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
View(m3)
library(ASRtriala)
?ASRtriala
aud <- audit.met(data = pheno.wheat.preds, trial = "location",
gen = "gen", resp = "predicted.value")
aud$gen.inc
aud$gen.inc.perc
aud$met.stats
library(ASRgenomics)
?ASRgenomics
library(ASRtriala)
?ASRtriala
mm1 <- fit.single(
data = st.data, gen = "gen", check = "check",
rep = NULL, ibk = "ibk", row = "row",
col = "col", resp = "yield",
type.gen = "random", type.rep = "fixed",
add.rep = FALSE, add.ibk = TRUE, add.row = TRUE, add.col = TRUE,
trend.row = "none", trend.col = "none", add.nugget = FALSE,
type.residual = "indep")
st.data <- pheno.wheat[pheno.wheat$location == "Clay_Center",]
mm1 <- fit.single(
data = st.data, gen = "gen", check = "check",
rep = NULL, ibk = "ibk", row = "row",
col = "col", resp = "yield",
type.gen = "random", type.rep = "fixed",
add.rep = FALSE, add.ibk = TRUE, add.row = TRUE, add.col = TRUE,
trend.row = "none", trend.col = "none", add.nugget = FALSE,
type.residual = "indep")
mm1$aov
head(st.data)
str(st.data)
st.data <- droplevels(st.data)
str(st.data)
View(st.data)
mm1$call
mm1$gof.stats
mm1$aov
mm1$gof.stats
class(mm1$mod)
summary(mm1$mod)$varcomp
head(mm1$predictions)
head(pheno.wheat)
head(pheno.wheat.preds)
str(pheno.wheat)
met.model.fa <- fit.met(
data = pheno.wheat.preds, trial = "location", gen = "gen",
resp = "predicted.value", weight = "weight",
type.gen = "random", type.trial = "fixed", vc.model = "fa3")
met.model.fa$call
met.model.fa$gof.stats
head(met.model.fa$predictions)
met.model.fa$vcov.g
met.model.fa$corr.g
met.model.fa$fa.loadings
met.model.fa$call
met.model.fa$gof.stats
head(met.model.fa$predictions)
met.model.fa$vcov.g
met.model.fa$corr.g
met.model.fa$fa.loadings
met.model.fa$
aov
met.model.fa$warnings
mm1$aov
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc,
random = ~ block * gen * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
m4 <- as.asrtests(m3, NULL, NULL)
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
wald.asreml(mm1, ssType = "conditional", denDF = "numeric")
class(mm1)
View(mm1)
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2,
random = ~ block * gen * Year * Cutting * loc,
data = data,
na.action = list(x = "include", y = "include"))
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
head(data)
?wald.asreml
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc,
random = ~ block * gen * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
wald.asreml(m3, ssType = "incremental", denDF = "numeric")
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc + gen loc:gen,
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc + gen + loc:gen,
random = ~ block * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
str(a7)
m2 <-lmer(Yield.buac ~ (1|block) + gen + (1|block:gen) + env + env:gen, data = splitplot)
library(metan)
library(lmerTest) # ANOVA Table (replace it)
m2 <-lmer(Yield.buac ~ (1|block) + gen + (1|block:gen) + env + env:gen, data = splitplot)
library(lme4) # GLMM
library(metan)
library(data.table)
library(lme4) # GLMM
library(car)
library(lmerTest) # ANOVA Table (replace it)
library(RLRsim)
# library(RLRsim)
install.packages("MASS")
library(lme4) # GLMM
# library(RLRsim)
install.packages("boot")
library(lme4) # GLMM
library(lmerTest) # ANOVA Table (replace it)
m2 <-lmer(Yield.buac ~ (1|block) + gen + (1|block:gen) + env + env:gen, data = splitplot)
m2 <-lmer(Yield.buac ~ (1|block) + gen + (1|block:gen) + env + env:gen, data = a7)
str(a7)
m2 <-lmer(raw ~ (1|block) + gen + (1|block:gen) + env + env:gen, data = a7)
anova(m2,type="III", ddf="Kenward-Roger")
str(a7)
m2 <-lmer(raw ~ gen * env * loc * Year + (1|block) + (1|block:gen) + (1|block/loc), data = a7)
anova(m2,type="III", ddf="Kenward-Roger")
str(a7)
m2 <-lmer(raw ~ gen * env * loc * Year * Cutting + (1|block) + (1|block:gen) + (1|block/loc), data = a7)
str(a5)
m4 <- asreml(fixed = raw ~ Year * Cutting ,
random = ~ loc,
residual = ~ gen:ar1(loc), data = data)
m4 <- asreml(fixed = raw ~ Year * loc,
random = ~ Cutting,
residual = ~ gen:ar1(loc), data = data)
m4 <- asreml(fixed = raw ~ Year * loc * gen,
random = ~ Cutting,
residual = ~ gen:ar1(loc), data = data)
head(data)
m4 <- asreml(fixed = raw ~ Year * loc * gen,
random = ~ Cutting,
residual = ~ gen:id(env), data = data)
m4 <- asreml(fixed = raw ~ Year * loc * gen,
random = ~ Cutting,
residual = ~ env, data = data)
m3 <- asreml::asreml(fixed = raw ~ 1 + cov1 + cov2 + loc + gen + loc:gen,
random = ~ block * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald(m3)
m3 <- asreml::asreml(fixed = raw ~ 1 + loc:gen,
random = ~ block * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald(m3)
# predict tratment by time means
predict(m3, classify = "Year:Cutting")
m3 <- asreml::asreml(fixed = raw ~ 1 + loc +gen + loc:gen,
random = ~ block * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald(m3)
# predict tratment by time means
predict(m3, classify = "Year:Cutting")
a8 <- a7 %>% dplyr::filter(!gen %in% c(201, 202))
View(a8)
a8$check <- 0
a9 <- a7 %>% dplyr::filter(gen %in% c(201, 202))
a9$check <- 1
a7 <- rbind(a8, a9)
View(a7)
data <- a7
head(data)
str(a7)
a7$check <- as.factor(a7$check)
str(a7)
m3 <- asreml::asreml(fixed = raw ~ 1 + check + gen,
random = ~ block * Year * Cutting,
data = data,
na.action = list(x = "include", y = "include"))
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
wald(m3)
head(data)
mm1 <- fit.single(
data = data, gen = "gen", check = "check",
rep = NULL, ibk = "block", row = "row",
col = "col", resp = "raw",
type.gen = "random", type.rep = "fixed",
add.rep = FALSE, add.ibk = TRUE, add.row = TRUE, add.col = TRUE,
trend.row = "none", trend.col = "none", add.nugget = FALSE,
type.residual = "indep")
str(data)
a7$check <- as.factor(a7$check)
data <- a7
head(data)
str(data)
mm1 <- fit.single(
data = data, gen = "gen", check = "check",
rep = NULL, ibk = "block", row = "row",
col = "col", resp = "raw",
type.gen = "random", type.rep = "fixed",
add.rep = FALSE, add.ibk = TRUE, add.row = TRUE, add.col = TRUE,
trend.row = "none", trend.col = "none", add.nugget = FALSE,
type.residual = "indep")
mm1$aov
head(mm1$predictions)
summary(mm1$mod)$varcomp
class(mm1$mod)
mm1$gof.stats
class(mm1$mod)
wald.asreml(mm1$mod, ssType = "conditional", denDF = "numeric")
wald.asreml(mm1$mod, ssType = "conditional", denDF = "numeric")
class(mm1$mod)
class(m3)
m3 <- mm1$mod
wald.asremlm3, ssType = "conditional", denDF = "numeric")
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
mm1$aov
a7 <- a6 %>% dplyr::filter(trait %in% c("Lignin"))
a7$env <- as.factor(a7$env)
a7 <- droplevels(a7)
str(a7)
a8 <- a7 %>% dplyr::filter(!gen %in% c(201, 202))
a8$check <- 0
a9 <- a7 %>% dplyr::filter(gen %in% c(201, 202))
a9$check <- 1
a7 <- rbind(a8, a9)
data <- a7
str(a7)
a7$check <- as.factor(a7$check)
str(a7)
data <- a7
head(data)
str(a7)
m3 <- asreml::asreml(fixed = raw ~ 1 + check + gen,
random = ~ block * Year * Cutting * loc,
data = data,
na.action = list(x = "include", y = "include"))
wald.asreml(m3, ssType = "conditional", denDF = "numeric")
m3 <- asreml::asreml(fixed = raw ~ 1 + check,
random = ~ gen * block * Year * Cutting * loc,
data = data,
na.action = list(x = "include", y = "include"))
m3 <- update.asreml(m3)
library(agricolae)
install.packages("agricolae")
library(agricolae)
data(sweetpotato)
model<-aov(yield~virus,data=sweetpotato)
summary(model)
out <- duncan.test(model,"virus",
main="Yield of sweetpotato. Dealt with different virus")
plot(out,variation="IQR")
str(sweetpotato)
levels(sweetpotato$virus)
duncan.test(model,"virus",alpha=0.01,console=TRUE)
df<-df.residual(model)
df
MSerror<-deviance(model)/df
MSerror
out <- with(sweetpotato,duncan.test(yield,virus,df,MSerror, group=TRUE))
out
?df.residual
load("/home/hawkins/Documents/git/Dreger_2022/tidy_Dreger1.RData")
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
df.residual(m6)
df.residual(mod6)
deviance(mod6)/df.residual(mod6)
?duncan.test
duncan.test(mod6, "FD")
out <- duncan.test(mod6, "FD")
plot(out,variation="IQR")
out <- duncan.test(mod6, "loc")
plot(out,variation="IQR")
out <- duncan.test(mod6, "cut")
plot(out,variation="IQR")
