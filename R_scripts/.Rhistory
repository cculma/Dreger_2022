emmeans(mod3, "FD")
FD_a <- emmeans(mod3, "FD")
contrast(FD_a, "1")
FD_a <- emmeans(mod3, "FD")
contrast(FD_a, "1")
contrast(FD_a, "FD1")
contrast(FD_a)
emmeans(mod3, pairwise ~ FD)
emmeans(mod3, pairwise ~ FD + loc)
show_tests(ls_means(mod3))
ls1 <- difflsmeans(mod3, which = NULL, ddf="Satterthwaite")
###############
# lme model
head(FD4[[1]])
View(FD4)
str(data1)
drop1(mod3)
?drop1
mod5 <- lmer(predicted.value ~ FD + loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
drop1(mod3)
drop1(mod5)
mod5 <- lmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
drop1(mod5)
drop1(mod5, test = "F")
add1(mod5, test = "F")
(step_res <- step(mod3))
final <- get_model(step_res)
final
anova(final)
summary(mod3, ddf="lme4")
coef(summary(mod3))
lsm <- ls_means(mod3)
plot(lsm, which=c("FD", "loc"))
show_tests(ls_means(mod3))
ranova(mod5, reduce.terms = T)
summary(mod3, ddf="lme4")
summary(mod3)
?glmer
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
anova(mod5)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1, family = binomial)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1, family = binomial, nAGQ = 0)
## generalized linear mixed model
library(lattice)
xyplot(incidence/size ~ period|herd, cbpp, type=c('g','p','l'),
layout=c(3,5), index.cond = function(x,y)max(y))
(gm1 <- glmer(cbind(incidence, size - incidence) ~ period + (1 | herd),
data = cbpp, family = binomial))
anova(gm1)
fixef(mod3)
ranef(mod3)
ls_means(mod3)
ls_means(mod3, pairwise = T)
ls1 <- difflsmeans(mod3, which = NULL, ddf="Satterthwaite")
View(ls1)
write.csv(ls1, "~/Documents/git/Dreger_2022/stats_1/ls1.csv", quote = F, row.names = T)
write.csv(ls1, "~/Documents/git/Dreger_2022/statistical_results/ls1.csv", quote = F, row.names = T)
sqrt(57.5088)
sqrt(303.151)
303.15 + 2*(57.5088)
303.15 - 2*(57.5088)
sessionInfo()
?glmer
mod4 <- lmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
mod5 <- glmer(predicted.value ~ FD * loc
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
summary(mod4)
summary(mod5)
mod3 <- lmer(predicted.value ~ FD + loc + FD:loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
summary(mod3)
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
anova(mod4)
mod5 <- glmer(predicted.value ~ FD * loc * cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year + cut
+ (1|year) + (1|cut) + (1|year/cut)
+ (1|FD/year) + (1|loc/year)
+ (1|FD/cut) + (1|loc/cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year * cut
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * year * (1|cut)
, data = data1)
mod4 <- lmer(predicted.value ~ FD * loc * year * (1|cut)
, data = data1)
anova(mod4)
mod4 <- lmer(predicted.value ~ FD * loc * year *cut * (1|cut)
, data = data1)
anova(mod4)
ls_means(mod4, pairwise = T)
install.packages('augmentedRCBD', dependencies=TRUE)
library(augmentedRCBD)
a1 <- read.csv("~/Documents/git/Dreger_2022/raw_data/example_Scoot.csv")
View(a1)
# Example data
blk <- c(rep(1,7),rep(2,6),rep(3,7))
blk
trt <- c(1, 2, 3, 4, 7, 11, 12, 1, 2, 3, 4, 5, 9, 1, 2, 3, 4, 8, 6, 10)
trt
y1
y1 <- c(92, 79, 87, 81, 96, 89, 82, 79, 81, 81, 91, 79, 78, 83, 77, 78, 78,
70, 75, 74)
y2 <- c(258, 224, 238, 278, 347, 300, 289, 260, 220, 237, 227, 281, 311, 250,
240, 268, 287, 226, 395, 450)
data <- data.frame(blk, trt, y1, y2)
data
# Convert block and treatment to factors
data$blk <- as.factor(data$blk)
data$trt <- as.factor(data$trt)
str(data)
View(data)
out1 <- augmentedRCBD(data$blk, data$trt, data$y1, method.comp = "lsd",
alpha = 0.05, group = TRUE, console = TRUE)
colnames(a1)
View(a1)
lev1 <- c("Entry","Block")
a1[,lev1] <- lapply(a1[,lev1], factor)
levels(a1$Entry)
lev2 <- c("Sibley","Hardin","Weber","Kato")
out2 <- augmentedRCBD(a1$Block, a1$Entry, a1$Yi, method.comp = "lsd",
alpha = 0.05, group = TRUE, console = TRUE)
out2$`Overall adjusted mean`
out2$Means
rm(list = ls())
library(metan)
library(data.table)
library(lme4) # GLMM
library(car)
library(lmerTest) # ANOVA Table (replace it)
load("/Users/cesarmedina/Documents/git/Dreger_2022/tidy_Dreger1.RData")
str(data1)
###############
# lme model
names(FD4)
mod3 <- lmer(predicted.value ~ FD + loc + FD:loc
+ (1|year) + (1|cut) + (1|year:cut)
+ (1|FD:year) + (1|loc:year)
+ (1|FD:cut) + (1|loc:cut)
+ (1|FD:loc:year) + (1|FD:loc:cut) + (1|loc:year:cut)
+ (1|FD:loc:year:cut), data = data1)
summary(mod3)
anova(mod3)
ls_means(mod3, pairwise = T)
ls1 <- difflsmeans(mod3, which = NULL, ddf="Satterthwaite")
View(ls1)
ls2 <- ls_means(mod3, pairwise = T)
ls3 <- ls_means(mod3, pairwise = F)
View(ls2)
View(ls3)
mean(data1$predicted.value)
ls_means(mod3, pairwise = F)
summary(mod3)
View(data1)
write.csv(ls3, "~/Documents/git/Dreger_2022/statistical_results/ls3.csv", quote = F, row.names = T)
ls_means(mod3, pairwise = F)
?ls_means
ls_means(mod3, which = NULL, ddf="Kenward-Roger")
ls_means(mod3, pairwise = F)
ls_means(mod3, pairwise = F, ddf="Kenward-Roger")
ls3 <- ls_means(mod3, pairwise = F, ddf="Satterthwaite")
ls4 <- ls_means(mod3, pairwise = F, ddf="Kenward-Roger")
View(ls3)
View(ls4)
summary(mod3)
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
lsmeans(mod6, "FD")
install.packages("lsmeans")
library(lsmeans)
lsmeans(mod6, "FD")
lsmeans(mod6)
?lsmeans
lsmeans(mod6, "loc")
lsmeans(mod6, "loc:year")
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ loc:year + loc:cut + year:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
mod6 <- lm(predicted.value ~ FD + loc + year + cut
+ FD:loc + FD:year + FD:cut
+ loc:year + loc:cut + year:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut + loc:year:cut
+ FD:loc:year:cut, data = data1)
anova(mod6)
lsmeans(mod6, "loc:year")
lsmeans(mod6, "loc")
marginal = emmeans(mod6, ~ loc)
marginal
if(!require(psych)){install.packages("psych")}
if(!require(ordinal)){install.packages("ordinal")}
if(!require(car)){install.packages("car")}
if(!require(emmeans)){install.packages("emmeans")}
if(!require(multcomp)){install.packages("multcomp")}
Data = read.table(header=TRUE, stringsAsFactors=TRUE, text="
Speaker  Likert
Pooh      3
Pooh      5
Pooh      4
Pooh      4
Pooh      4
Pooh      4
Pooh      4
Pooh      4
Pooh      5
Pooh      5
Piglet    2
Piglet    4
Piglet    2
Piglet    2
Piglet    1
Piglet    2
Piglet    3
Piglet    2
Piglet    2
Piglet    3
Tigger    4
Tigger    4
Tigger    4
Tigger    4
Tigger    5
Tigger    3
Tigger    5
Tigger    4
Tigger    4
Tigger    3
")
Data
Data$Speaker = factor(Data$Speaker,
levels=unique(Data$Speaker))
Data$Likert.f = factor(Data$Likert,
ordered = TRUE)
library(psych)
headTail(Data)
str(Data)
summary(Data)
library(ordinal)
model = clm(Likert.f ~ Speaker,
data = Data)
anova(model, type="II")
anova(model, type="III")
?clm
emmeans(mod6, "loc")
mod6 <- lm(predicted.value ~ FD + loc + factor(year) + cut
+ FD:loc + FD:year + FD:cut
+ loc:year + loc:cut + year:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut + loc:year:cut
+ FD:loc:year:cut, data = data1)
emmeans(mod6, "loc")
emmeans(mod6, "year")
mod6 <- lm(predicted.value ~ FD + loc
+ FD:loc + FD:year + FD:cut
+ loc:year + loc:cut + year:cut
+ FD:loc:year + FD:loc:cut + FD:year:cut + loc:year:cut
+ FD:loc:year:cut, data = data1)
emmeans(mod6, "FD")
str(data1)
mod6 <- lm(predicted.value ~ FD + loc, data = data1)
emmeans(mod6, "FD")
emmeans(mod6, "loc")
mod6 <- lm(predicted.value ~ FD * loc, data = data1)
emmeans(mod6, "loc")
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_01.csv")
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_02.csv")
head(a1)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_02.csv")
head(a1)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_02.csv", header = T)
head(a1)
colnames(a1)
str(a1)
colnames(a1)
a1$log_CFU <- log(a1$CFU)
View(a1)
cor(a1$LOG_Y, a1$log_CFU)
str(a1)
cor(a1$LOG_Y, a1$log_CFU, use = "complete.obs")
# Data analysis for Yeidymar
library(ggplot2)
ggplot(a1, aes(x=log_CFU, y=LOG_Y)) + geom_point()
library(tidyverse)
library(ggplot2)
library(ggpubr)
library(hrbrthemes)
library(viridis)
library(ggpubr)
library(RColorBrewer)
library(brew)
library(ggstatsplot)
library(ggcorrplot)
ggplot(a1, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
colnames(a1)
a2 <- a1 %>% group_by(DPI) %>% summarise_at(vars(LOG_Y), mean = mean)
a2 <- a1 %>% group_by(DPI) %>% summarise_at(vars(LOG_Y), list(min = min, max = max, mean = mean, sd = sd, cv = cv), na.rm = TRUE)
View(a2)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_02.csv", header = T)
head(a1)
colnames(a1)
str(a1)
a1$log_CFU <- log(a1$CFU)
cor(a1$LOG_Y, a1$log_CFU, use = "complete.obs")
ggplot(a1, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
a2 <- a1 %>% group_by(DPI) %>% summarise_at(vars(LOG_Y), list(min = min, max = max, mean = mean, sd = sd, cv = cv), na.rm = TRUE)
View(a2)
View(a1)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_02.csv", header = T)
head(a1)
View(a1)
colnames(a1)
str(a1)
a1$log_CFU <- log(a1$CFU)
cor(a1$LOG_Y, a1$log_CFU, use = "complete.obs")
ggplot(a1, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
a2 <- a1 %>% group_by(DPI) %>% summarise_at(vars(LOG_Y), list(min = min, max = max, mean = mean, sd = sd, cv = cv), na.rm = TRUE)
View(a2)
colnames(a1)
a2 <- a1 %>% group_by(c(DPI, leaflet_id, plant_id_name)) %>% summarise_at(vars(LOG_Y), list(min = min, max = max, mean = mean, sd = sd, cv = cv), na.rm = TRUE)
a1$R_tech <- rep(1:(nrow(a1)/n), each = n)
colnames(a1)
a2 <- aggregate(log_CFU ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean" )
View(a2)
a3 <- aggregate(LOG_Y ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean" )
View(a3)
head(a2)
ggplot(a2, aes(x = a2[,3], y = a2[,4], fill = a2[,3])) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
ggplot(a2, aes(x = a2[,3], y = a2[,4]) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
)
ggplot(a2, aes(x = a2[,3], y = a2[,4])) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
str(a1)
colnames(a1)
a1[,lev1] <- lapply(a1[,lev1], factor)
lev1 <- c("gen","plant_id_name","leaflet_id","DPI")
a1[,lev1] <- lapply(a1[,lev1], factor)
str(a1)
a2 <- aggregate(log_CFU ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean" )
a3 <- aggregate(LOG_Y ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean" )
colnames(a2)
colnames(a3)
a4 <- inner_join(a2, a3, by = c("plant_id_name","leaflet_id","DPI"))
View(a4)
ggplot(a4, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
cor(a4$LOG_Y, a4$log_CFU, use = "complete.obs")
cor(a4$LOG_Y, a4$log_CFU, use = "complete.obs")
cor(a1$LOG_Y, a1$log_CFU, use = "complete.obs")
head(a4)
str(a4)
head(a4)
ggplot(a2, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
colnames(a4)
ggplot(a4, aes(x=log_CFU, y=log_CFU)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
head(a4)
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
# Data analysis for Yeidymar
library(ggplot2)
library(tidyverse)
# Data analysis for Yeidymar
library(ggplot2)
library(tidyverse)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_01.csv", header = T)
View(a1)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_01.csv", header = T)
View(a1)
head(a1)
colnames(a1)
str(a1)
a1 <- read.csv("~/Documents/git/Yeidymar_2022/Alf_01.csv", header = T)
head(a1)
tail(a1)
colnames(a1)
str(a1)
View(a1)
a1$CFU
log(a1$CFU)
a1$log_CFU <- log(a1$CFU)
lev1 <- c("gen","plant_id_name","leaflet_id","DPI")
lev1
a1[,lev1] <- lapply(a1[,lev1], factor)
str(a1)
levels(a1$gen)
levels(a1$plant_id_name)
levels(a1$leaflet_id)
levels(a1$leaflet_id)
levels(a1$DPI)
levels(a1$gen)
levels(a1$plant_id_name)
levels(a1$leaflet_id)
levels(a1$DPI)
count(levels(a1$plant_id_name))
length(levels(a1$plant_id_name))
str(a1)
2 * 65 * 3 * 4
2 * 65 * 3 * 4 * 3
a2 <- aggregate(log_CFU ~ plant_id_name + leaflet_id + DPI, data = a1, FUN = "mean")
View(a2)
a3 <- aggregate(LOG_Y ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean")
View(a3)
length(a3)
nrow(a3)
nrow(a2)
a2 <- aggregate(log_CFU ~ gen + plant_id_name + leaflet_id + DPI, data = a1, FUN = "mean")
a3 <- aggregate(LOG_Y ~  gen + plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean")
nrow(a3)
nrow(a2)
a4 <- full_join(a2, a3, by = c("gen","plant_id_name","leaflet_id","DPI"))
View(a4)
str(a4)
str(a4)
levels(a1$gen)
levels(a1$plant_id_name)
str(a4)
2 * 65 * 3 * 4
65 * 3 * 4
summary(a4$plant_id_name)
View(a4)
65 * 3 * 4
View(a4)
ggplot(a4, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
ggplot(a4, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
cor(a4$LOG_Y, a4$log_CFU, use = "complete.obs")
boxplot(a4$log_CFU)
View(a1)
View(a1)
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
mod1 <- lm(log_CFU ~ DPI, data = a1)
anova(mod1)
colnames(a4)
mod1 <- lm(log_CFU ~ DPI, data = a4)
anova(mod1)
mod2 <- lm(log_CFU ~ DPI + plant_id_name, data = a4)
anova(mod2)
colnames(a4)
ggplot(a4, aes(x = plant_id_name, y = log_CFU, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
mod2 <- lm(log_CFU ~ DPI + plant_id_name, data = a4)
anova(mod2)
mod3 <- lm(log_CFU ~ DPI + plant_id_name + DPI:plant_id_name, data = a4)
anova(mod3)
summary(a4$plant_id_name)
View(a4)
head(a4)
a5 <- a4 %>% dplyr::select(DPI %in% c("9"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("9"))
View(a5)
a5 <- a4 %>% dplyr::filter(DPI %in% c("3"))
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
a5 <- a4 %>% dplyr::filter(DPI %in% c("0"))
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
a5 <- a4 %>% dplyr::filter(DPI %in% c("3"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("6"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("9"))
View(a5)
