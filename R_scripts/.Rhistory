mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
FD4 <- FD3 %>% dplyr::filter(trait == "ADF")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
FD4 <- FD3 %>% dplyr::filter(trait == "Su_WSC")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
mod2 <- lm(predicted.value ~ year + cut + loc + year:cut, data = FD4)
anova(mod2)
FD4 <- FD3 %>% dplyr::filter(trait == "Su_ESC")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
FD4 <- FD3 %>% dplyr::filter(trait == "ADF")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + year:cut, data = FD4)
anova(mod1)
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4)
anova(mod1)
FD4 <- FD3 %>% dplyr::filter(trait == "ADF")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4)
anova(mod1)
FD4 <- FD3 %>% dplyr::filter(trait == "Starch")
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4)
anova(mod1)
library(metan)
desc_stat(data_ge2)
head(data_ge2)
head(FD4)
FD5 <- FD3 %>% select(1,2,4,6,7) %>% spread(key = trait, value = predicted.value)
FD5 <- FD3 %>% dplyr::filter(trait == "ADF") %>% select(2,3,7) %>% spread(key = key, value = predicted.value)
head(FD4)
FD5 <- FD3 %>% dplyr::filter(trait == "ADF") %>% select(2,3,7) %>% spread(key = env, value = predicted.value)
View(FD5)
FD5 <- FD3 %>% dplyr::filter(trait == "ADF")
View(FD5)
?desc_stat
desc_stat(.data = FD5, stats = "main", hist = F)
?desc_wider
head(FD4)
desc_stat(.data = FD5, stats = "main", hist = F, by = "gen")
desc_stat(.data = FD3, stats = "main", hist = F, by = "trait")
desc_stat(.data = FD3, stats = "main", hist = F, by = "trait")
desc_stat(.data = FD5, stats = "main", hist = F)
FD3 %>% dplyr::filter(trait == "ADF") %>% desc_stat(.data = FD5, stats = "main", hist = F)
FD3 %>% dplyr::filter(trait == "ADF") %>% desc_stat(.data = FD3, stats = "main", hist = F)
FD5 <- FD3 %>% dplyr::filter(trait == "ADF")
desc_stat(.data = FD5, stats = "main", hist = F)
head(FD4)
head(FD3)
FD4 <- split(FD3[,-1], FD3$trait)
names(FD4)
1:length(FD4)
FD5 <- list()
for (i in 1:length(FD4)) {
stat1 <- desc_stat(.data = FD4[[1]], stats = "main", hist = F)
FD5[[length(FD5)+1]] <- stat1
}
names(FD5) <- names(FD4)
FD5 <-rbindlist(FD5, use.names=TRUE, fill=TRUE, idcol="trait")
library(data.table)
FD5 <-rbindlist(FD5, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD5)
FD5 <- list()
for (i in 1:length(FD4)) {
stat1 <- desc_stat(.data = FD4[[i]], stats = "main", hist = F)
FD5[[length(FD5)+1]] <- stat1
}
names(FD5) <- names(FD4)
FD5 <-rbindlist(FD5, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD5)
FD5 <- FD5[,-2]
write.csv(FD5, "~/Documents/git/Dreger_2022/stats_1/desc_stats.csv", quote = F, row.names = F)
head(FD4[[1]])
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[1]])
anova(mod1)[,c(1,3,5)]
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
rnames
colnames(final) = c("DF", "MS", "P-value")
View(final)
names(FD4[[1]]
)
names(FD4[1])
colnames(final)[2] = names(FD4[1])
final
final <- as.data.frame(round(final, digits = 2))
final
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` > 0.05] <- "ns
desc_stat(data_ge2)
head(data_ge2)
FD5 <- FD3 %>% dplyr::filter(trait == "ADF") %>% select(2,3,7) %>% spread(key = env, value = predicted.value)
final$sign[final$`P-value` > 0.05] <- "ns"
final
final[[2]] = paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final
head(FD4[[1]])
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[1]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
colnames(final) <- c("DF", "MS", "P-value")
colnames(final)[2] <- names(FD4[1])
final <- as.data.frame(round(final, digits = 2))
final
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` > 0.05] <- "ns"
final
final[[2]] = paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final = final[-c(3,4)]
final
1:length(FD4)
FD6 <- list()
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[1]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
final
final <- final %>% rownames_to_column(var = "SOV")
final
final
FD6 <- list()
for (i in 1:length(FD4)) {
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[i]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
colnames(final) <- c("DF", "MS", "P-value")
colnames(final)[2] <- names(FD4[i])
final <- as.data.frame(round(final, digits = 2))
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` > 0.05] <- "ns"
final[[2]] <- paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final <- final[-c(3,4)]
final <- final %>% rownames_to_column(var = "SOV")
FD6[[length(FD6)+1]] <- final
}
names(FD6) <- names(FD4)
View(FD6)
View(FD6[["ADF"]])
View(FD6[["Cprot"]])
FD6 <- list()
for (i in 1:length(FD4)) {
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[i]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
colnames(final) <- c("DF", "MS", "P-value")
# colnames(final)[2] <- names(FD4[i])
final <- as.data.frame(round(final, digits = 2))
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` > 0.05] <- "ns"
final[[2]] <- paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final <- final[-c(3,4)]
final <- final %>% rownames_to_column(var = "SOV")
FD6[[length(FD6)+1]] <- final
}
names(FD6) <- names(FD4)
View(FD6)
View(FD6[["Ash"]])
View(FD6[["Starch"]])
names(FD6)
View(FD6[["IVTDMD30"]])
FD6.1 <- rbindlist(FD6, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD6.1)
FD6.1 <- FD6.1 %>% select(-3) %>% spread(key = trait, value = MS)
View(FD6.1)
head(FD6[[1]])
FD6.2 <- FD6[[1]][1:2]
View(FD6.2)
FD6.2 <- inner_join(FD6.2, FD6.1, by = "SOV")
View(FD6.2)
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[1]])
final <- anova(mod1)[,c(1,3,5)]
final
FD6 <- list()
for (i in 1:length(FD4)) {
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[1]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
colnames(final) <- c("DF", "MS", "P-value")
# colnames(final)[2] <- names(FD4[i])
final <- as.data.frame(round(final, digits = 2))
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` < 0.001] <- "***"
final$sign[final$`P-value` > 0.05] <- "ns"
final[[2]] <- paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final <- final[-c(3,4)]
final <- final %>% rownames_to_column(var = "SOV")
FD6[[length(FD6)+1]] <- final
}
names(FD6) <- names(FD4)
FD6.1 <- rbindlist(FD6, use.names=TRUE, fill=TRUE, idcol="trait")
FD6.1 <- FD6.1 %>% select(-3) %>% spread(key = trait, value = MS)
FD6.2 <- FD6[[1]][1:2]
FD6.2 <- inner_join(FD6.2, FD6.1, by = "SOV")
View(FD6.2)
FD6 <- list()
for (i in 1:length(FD4)) {
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[i]])
final <- anova(mod1)[,c(1,3,5)]
rnames <- rownames(final)
colnames(final) <- c("DF", "MS", "P-value")
# colnames(final)[2] <- names(FD4[i])
final <- as.data.frame(round(final, digits = 2))
final$sign[final$`P-value` < 0.05] <- "*"
final$sign[final$`P-value` < 0.01] <- "**"
final$sign[final$`P-value` < 0.001] <- "***"
final$sign[final$`P-value` > 0.05] <- "ns"
final[[2]] <- paste(final[[2]], ifelse(is.na(final[[4]]), "", final[[4]]))
final <- final[-c(3,4)]
final <- final %>% rownames_to_column(var = "SOV")
FD6[[length(FD6)+1]] <- final
}
names(FD6) <- names(FD4)
FD6.1 <- rbindlist(FD6, use.names=TRUE, fill=TRUE, idcol="trait")
FD6.1 <- FD6.1 %>% select(-3) %>% spread(key = trait, value = MS)
head(FD6[[1]])
FD6.2 <- FD6[[1]][1:2]
FD6.2 <- inner_join(FD6.2, FD6.1, by = "SOV")
names(FD6)
FD6.3 <- FD6[[10]][1:2]
View(FD6.3)
FD6.4 <- FD6[[16]][1:2]
View(FD6.4)
FD6.5 <- inner_join(FD6.2, FD6.1, by = "SOV")
View(FD6.5)
FD6.2 <- FD6[[1]][1:2]
FD6.3 <- FD6[[10]][1:2]
FD6.4 <- FD6[[16]][1:2]
FD6.5 <- inner_join(FD6.2, FD6.1, by = "SOV")
View(FD6.5)
write.csv(FD6.5, "~/Documents/git/Dreger_2022/stats_1/AOV.csv", quote = F, row.names = F)
View(FD6.4)
names(FD6)
load("/home/hawkins/Documents/git/big_files/tidy_Dreger1.RData")
FD2 <- read.csv("~/Documents/git/Dreger_2022/raw_data/FD_raw1.csv")
FD2 <- inner_join(b1, FD2, by = "ID") %>% select(5,9,10) %>% distinct(gen, .keep_all = T)
FD2[,colnames(FD2)] <- lapply(FD2[,colnames(FD2)], factor)
library(tidyverse)
library(ggcorrplot)
library(patchwork)
library(Matrix)
library(asreml)
library(asremlPlus)
FD2 <- read.csv("~/Documents/git/Dreger_2022/raw_data/FD_raw1.csv")
FD2 <- inner_join(b1, FD2, by = "ID") %>% select(5,9,10) %>% distinct(gen, .keep_all = T)
FD2[,colnames(FD2)] <- lapply(FD2[,colnames(FD2)], factor)
# join with ST1.1: BLUP values of quality traits
FD3 <- ST1.1 %>% inner_join(., FD2, by = "gen") %>% separate(3, c("loc", "year", "cut"), sep = "_", remove = F, convert = FALSE, extra = "merge")
head(FD3)
head(FD3)
library(metan)
library(data.table)
FD4 <- split(FD3[,-1], FD3$trait)
names(FD4)
mod1 <- lm(predicted.value ~ FD + year + cut + loc + loc:cut, data = FD4[[18]])
plot(mod1)
head(FD4[[18]])
FD7 <- FD4[[18]] %>% dplyr::filter(year == "2019")
str(FD7)
mod1 <- lm(predicted.value ~ FD + cut + loc + loc:cut, data = FD7)
plot(mod1)
anova(mod1)
head(FD4[[18]])
mod1 <- coef(lm(predicted.value ~ FD + cut + loc + loc:cut, data = FD7))
head(FD4[[18]])
ggplot(FD7, aes(cut, predicted.value, group = cut)) +
geom_boxplot()
ggplot(FD7, aes(cut, predicted.value, group = cut)) +
geom_boxplot() +
geom_abline(intercept = mod1[1], slope = mod1[2])
ggplot(FD7, aes(cut, predicted.value, group = loc)) +
geom_boxplot()
ggplot(FD7, aes(x = cut, y = predicted.value, group = loc)) +
geom_boxplot()
str(FD7)
FD7$loc <- as.factor(FD7$loc)
str(FD7)
ggplot(FD7, aes(x = cut, y = predicted.value, group = loc)) +
geom_boxplot()
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot()
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single"))
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(~loc, ncol = 3, scales = "free_y")
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(loc~, nrow = 3, scales = "free_y")
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(loc~ ., scales = "free_x")
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(loc ~ .)
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(. ~ loc)
head(FD4[[18]])
ggplot(FD7, aes(x = FD, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(. ~ loc)
ggplot(FD7, aes(x = FD, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(cut ~ loc)
ggplot(FD7, aes(x=FD, y=predicted.value, group= loc)) +
geom_line()+
geom_point() + facet_wrap(cut ~ .)
ggplot(FD7, aes(x=cut, y=predicted.value, group= loc)) +
geom_line()+
geom_point() + facet_wrap(FD ~ .)
head(FD4[[18]])
ggplot(FD7, aes(x=cut, y=predicted.value, group= loc)) +
geom_line()+
geom_point() + facet_wrap(gen ~ .)
load("/home/hawkins/Documents/git/big_files/tidy_Dreger1.RData")
FD2 <- read.csv("~/Documents/git/Dreger_2022/raw_data/FD_raw1.csv")
FD2 <- inner_join(b1, FD2, by = "ID") %>% select(5,9,10) %>% distinct(gen, .keep_all = T)
FD2[,colnames(FD2)] <- lapply(FD2[,colnames(FD2)], factor)
# add FD column
library(tidyverse)
FD2 <- read.csv("~/Documents/git/Dreger_2022/raw_data/FD_raw1.csv")
FD2 <- inner_join(b1, FD2, by = "ID") %>% select(5,9,10) %>% distinct(gen, .keep_all = T)
FD2[,colnames(FD2)] <- lapply(FD2[,colnames(FD2)], factor)
# join with ST1.1: BLUP values of quality traits
FD3 <- ST1.1 %>% inner_join(., FD2, by = "gen") %>% separate(3, c("loc", "year", "cut"), sep = "_", remove = F, convert = FALSE, extra = "merge")
head(FD3)
library(metan)
library(data.table)
FD4 <- split(FD3[,-1], FD3$trait)
names(FD4)
head(FD4[[18]])
names(FD4)
head(FD4[[18]])
mod1 <- coef(lm(predicted.value ~ FD + cut + loc + loc:cut, data = FD7))
anova(mod1)
names(FD4)
head(FD4[[18]])
FD7 <- FD4[[18]] %>% dplyr::filter(year == "2019")
str(FD7)
FD7$loc <- as.factor(FD7$loc)
coefs <- coef(lm(predicted.value ~ cut, data = dat))
ggplot(FD7, aes(x = FD, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + facet_wrap(cut ~ loc)
ggplot(FD7, aes(x=cut, y=predicted.value, group= loc)) +
geom_line()+
geom_point() + facet_wrap(gen ~ .)
ggplot(FD7, aes(x=cut, y=predicted.value, group= loc)) +
geom_line()
View(FD7)
FD7 <- FD4[[18]] %>% dplyr::filter(year == "2019") %>% dplyr::filter(!cut == "5")
str(FD7)
FD7 <- droplevels(FD7)
str(FD7)
FD7$loc <- as.factor(FD7$loc)
str(FD7)
names(FD4)
ggplot(FD7, aes(x = FD, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single"))
ggplot(FD7, aes(x = gen, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single"))
FD7 <- FD4[[18]] %>% dplyr::filter(year == "2019")
str(FD7)
lev4 <- c("gen","env","loc","year","cut","FD","Var1")
FD7[,lev4] <- lapply(FD7[,lev4], factor)
str(FD7)
lev4 <- c("gen","env","loc","year","cut","FD","Var1")
FD7[,lev4] <- lapply(FD7[,lev4], factor)
lev4 <- c("gen","env","loc","year","cut","FD","Var1")
lev4
str(FD7)
FD7 <- as.data.frame(FD7)
lev4 <- c("gen","env","loc","year","cut","FD","Var1")
FD7[,lev4] <- lapply(FD7[,lev4], factor)
str(FD7)
ggplot(FD7, aes(x = gen, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single"))
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single"))
ggplot(FD7, aes(x = cut, y = predicted.value, fill = loc)) +
geom_boxplot(alpha = 0.6, width=0.6, position = position_dodge(width=0.8, preserve = "single")) + theme_classic(base_size = 12)
ggplot(FD7, aes(x=cut, y=predicted.value, fill = loc)) +
geom_line()
ggplot(FD7, aes(x=cut, y=predicted.value, fill = loc)) +
geom_line() + geom_point()
ggplot(FD7, aes(x=cut, y=predicted.value, color = loc)) +
geom_line() + geom_point()
ggplot(FD7, aes(x=cut, y=predicted.value, color = loc)) +  geom_point()
ggplot(FD7, aes(x=cut, y=predicted.value, color = loc)) +  geom_point() + theme_classic(base_size = 12)
#  geom_abline(intercept = mod1[1], slope = mod1[2])
head(FD7)
FD8 <- FD7 %>% select(1,2,6) %>% spread(key = env, value = predicted.value)
View(FD8)
stat1 <- desc_stat(.data = FD8, stats = "main", hist = F)
View(stat1)
FD7 <- FD4[[18]]
#  geom_abline(intercept = mod1[1], slope = mod1[2])
head(FD7)
FD8 <- FD7 %>% select(1,2,6) %>% spread(key = env, value = predicted.value)
stat1 <- desc_stat(.data = FD8, stats = "main", hist = F)
FD8 <- list()
for (i in 1:length(FD4)) {
stat1 <- FD4[[i]] %>% select(1,2,6) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
FD8[[length(FD8)+1]] <- final
}
FD8 <- list()
for (i in 1:length(FD4)) {
stat1 <- FD4[[i]] %>% select(1,2,6) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
FD8[[length(FD8)+1]] <- stat2
}
names(FD4)
names(FD8) <- names(FD4)
View(FD8)
View(FD8[["Starch"]])
FD8 <- rbindlist(FD8, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD8)
#  geom_abline(intercept = mod1[1], slope = mod1[2])
head(FD7)
View(stat2)
stat1 <- FD4[[1]] %>% select(1,3,6) %>% spread(key = env, value = predicted.value)
stat1 <- FD4[[1]] %>% select(1,3,6) %>% spread(key = loc, value = predicted.value)
stat1 <- FD4[[1]] %>% select(1,3,6)
View(stat1)
#  geom_abline(intercept = mod1[1], slope = mod1[2])
head(FD7)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6)
View(stat1)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, cut), sep = "_", remove = T)
View(stat1)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, cut), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
View(stat2)
View(FD8)
# Stats by env ID_1
FD7 <- list()
for (i in 1:length(FD4)) {
stat1 <- FD4[[i]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, cut), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
FD7[[length(FD7)+1]] <- stat2
}
names(FD7) <- names(FD4)
FD7 <- rbindlist(FD7, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD7)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019")
View(stat1)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
stat1 <- FD4[[1]] %>% dplyr::filter(year == "2019") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat1 <- FD4[[1]] %>% dplyr::filter(cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5")
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6)
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %
stat1 <- FD4[[1]] %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T)
stat1 <- FD4[[1]] %>%dplyr::filter(year == "2019") %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(loc, gen), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
View(stat2)
stat1 <- FD4[[1]] %>%dplyr::filter(year == "2019") %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(gen, loc), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
# Stats by gen loc
FD6 <- list()
for (i in 1:length(FD4)) {
stat1 <- FD4[[i]] %>% dplyr::filter(year == "2019") %>% dplyr::filter(!cut == "5") %>% select(1,3,5,6) %>% unite("env", c(gen, loc), sep = "_", remove = T) %>% spread(key = env, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
FD6[[length(FD6)+1]] <- stat2
}
names(FD6) <- names(FD4)
FD6 <- rbindlist(FD6, use.names=TRUE, fill=TRUE, idcol="trait")
View(FD6)
write.csv(FD6, "~/Documents/git/Dreger_2022/stats_1/Stats2.csv", quote = F, row.names = F)
write.csv(FD7, "~/Documents/git/Dreger_2022/stats_1/Stats3.csv", quote = F, row.names = F)
write.csv(FD8, "~/Documents/git/Dreger_2022/stats_1/Stats3.csv", quote = F, row.names = F)
write.csv(FD7, "~/Documents/git/Dreger_2022/stats_1/Stats3.csv", quote = F, row.names = F)
write.csv(FD8, "~/Documents/git/Dreger_2022/stats_1/Stats4.csv", quote = F, row.names = F)
stat1 <- FD4[[1]] %>% select(1,3,5,6)
stat1 <- FD4[[1]] %>% select(1,2,6) %>% spread(key = gen, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
# Stats by gen loc
FD5 <- list()
for (i in 1:length(FD4)) {
stat1 <- FD4[[i]] %>% select(1,2,6) %>% spread(key = gen, value = predicted.value)
stat2 <- desc_stat(.data = stat1, stats = "main", hist = F)
FD5[[length(FD5)+1]] <- stat2
}
names(FD5) <- names(FD4)
FD5 <- rbindlist(FD5, use.names=TRUE, fill=TRUE, idcol="trait")
write.csv(FD6, "~/Documents/git/Dreger_2022/stats_1/Stats0.csv", quote = F, row.names = F)
write.csv(FD5, "~/Documents/git/Dreger_2022/stats_1/Stats0.csv", quote = F, row.names = F)
?desc_stat
head(FD3)
colnames(FD4)
colnames(FD3)
View(FD3)
View(FD2)
FD6.1 <- FD6 %>% separate(2, c("gen", "loc"), sep = "_", remove = F, convert = FALSE, extra = "merge") %>% inner_join(., FD2, by = "gen")
View(FD6.1)
View(FD6.1)
FD6.1 <- FD6.1[order(FD6.1$FD, FD6.1$trait), ]
View(FD6.1)
FD6.1 <- FD6.1[order(FD6.1$trait, FD6.1$FD), ]
colnames(FD6.1)
FD6.1 <- FD6 %>% separate(2, c("gen", "loc"), sep = "_", remove = T, convert = FALSE, extra = "merge") %>% inner_join(., FD2, by = "gen")
FD6.1 <- FD6.1[order(FD6.1$trait, FD6.1$FD), ]
colnames(FD6.1)
FD6.1 <- FD6.1[,c(1,2,12,13,3:11)]
FD6.1 <- FD6 %>% separate(2, c("gen", "loc"), sep = "_", remove = T, convert = FALSE, extra = "merge") %>% inner_join(., FD2, by = "gen")
FD6.1 <- FD6.1[order(FD6.1$trait, FD6.1$FD), ]
FD6.1 <- FD6.1[,c(1,13,2,12,3:11)]
write.csv(FD6.1, "~/Documents/git/Dreger_2022/stats_1/Stats2.csv", quote = F, row.names = F)
