levels(a1$leaflet_id)
levels(a1$leaflet_id)
levels(a1$DPI)
levels(a1$gen)
levels(a1$plant_id_name)
levels(a1$leaflet_id)
levels(a1$DPI)
count(levels(a1$plant_id_name))
length(levels(a1$plant_id_name))
str(a1)
2 * 65 * 3 * 4
2 * 65 * 3 * 4 * 3
a2 <- aggregate(log_CFU ~ plant_id_name + leaflet_id + DPI, data = a1, FUN = "mean")
View(a2)
a3 <- aggregate(LOG_Y ~ plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean")
View(a3)
length(a3)
nrow(a3)
nrow(a2)
a2 <- aggregate(log_CFU ~ gen + plant_id_name + leaflet_id + DPI, data = a1, FUN = "mean")
a3 <- aggregate(LOG_Y ~  gen + plant_id_name + leaflet_id + DPI, data = a1, FUN= "mean")
nrow(a3)
nrow(a2)
a4 <- full_join(a2, a3, by = c("gen","plant_id_name","leaflet_id","DPI"))
View(a4)
str(a4)
str(a4)
levels(a1$gen)
levels(a1$plant_id_name)
str(a4)
2 * 65 * 3 * 4
65 * 3 * 4
summary(a4$plant_id_name)
View(a4)
65 * 3 * 4
View(a4)
ggplot(a4, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
ggplot(a4, aes(x=log_CFU, y=LOG_Y)) + geom_point() + theme_ipsum(base_family = "Arial", base_size = 12)
cor(a4$LOG_Y, a4$log_CFU, use = "complete.obs")
boxplot(a4$log_CFU)
View(a1)
View(a1)
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot(alpha = 0.6, outlier.shape = NA)
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
mod1 <- lm(log_CFU ~ DPI, data = a1)
anova(mod1)
colnames(a4)
mod1 <- lm(log_CFU ~ DPI, data = a4)
anova(mod1)
mod2 <- lm(log_CFU ~ DPI + plant_id_name, data = a4)
anova(mod2)
colnames(a4)
ggplot(a4, aes(x = plant_id_name, y = log_CFU, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
mod2 <- lm(log_CFU ~ DPI + plant_id_name, data = a4)
anova(mod2)
mod3 <- lm(log_CFU ~ DPI + plant_id_name + DPI:plant_id_name, data = a4)
anova(mod3)
summary(a4$plant_id_name)
View(a4)
head(a4)
a5 <- a4 %>% dplyr::select(DPI %in% c("9"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("9"))
View(a5)
a5 <- a4 %>% dplyr::filter(DPI %in% c("3"))
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
ggplot(a4, aes(x = DPI, y = log_CFU, fill = DPI)) + geom_boxplot()
a5 <- a4 %>% dplyr::filter(DPI %in% c("0"))
ggplot(a4, aes(x = DPI, y = LOG_Y, fill = DPI)) + geom_boxplot()
a5 <- a4 %>% dplyr::filter(DPI %in% c("3"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("6"))
a5 <- a4 %>% dplyr::filter(DPI %in% c("9"))
View(a5)
load("/home/hawkins/Documents/git/Dreger_2022/tidy_Dreger1.RData")
library(tidyverse)
library(ggcorrplot)
library(patchwork)
library(Matrix)
library(asreml)
library(asremlPlus)
library(data.table)
library(xlsx)
library(reshape2)
head(data1)
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ units.us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
data <- ST01[[16]] # starch
str(data)
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
data1 <- na.omit(data)
head(data1)
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ us(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD * loc ,
random = ~ diag(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ud(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ asr_us(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ at(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ ante(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ at(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corgh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ fa(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ idv(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
US <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ coruh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M3 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ coruh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M3 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
summary(m3)
wald(m3)
# ST0
data <- a6[[2]]
head(data)
data <- data[order(data$row, data$col), ]
m3 <- asreml::asreml(fixed = raw ~ gen * block,
data = data,
na.action = list(x = "include", y = "include"))
m3 <- asreml::asreml(fixed = raw ~ gen + block,
data = data,
na.action = list(x = "include", y = "include"))
summary(m3)
wald(m3)
m3 <- asreml::asreml(fixed = raw ~ 1,
random = gen + block,
data = data,
na.action = list(x = "include", y = "include"))
m3 <- asreml::asreml(fixed = raw ~ 1,
random = ~ gen + block,
data = data,
na.action = list(x = "include", y = "include"))
summary(m3)
wald(m3)
M3 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corv(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ coruh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(env) + id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(env):gen,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ us(loc):gen,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
levels(data1$env)
diag(16)
M3 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
summary(M3)
M4 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corgh(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ corg(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ ar1(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M5 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ diag(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ ante(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ ante(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ sfa(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ fa(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ facv(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M6 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ rr(env, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M2 <- asreml::asreml(fixed = predicted.value ~ 1,
random = ~ idv(env):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,,
random = ~ idv(env):id(gen) + cut + year
data = data1, na.action = list(x = "include", y = "include"),
M2 <- asreml::asreml(fixed = predicted.value ~ FD * loc,,
random = ~ idv(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M2)
summary(M2)
summary(M2)$varcomp
M3 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ corh(env):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M3)
summary(M3)$varcomp
M1 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ fa(env, 1):id(gen) + cut + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M1)
summary(M2)$varcomp
summary(M1)$varcomp
wald(M1)
wald(M2)
current.asrt <- as.asrtests(M1, NULL, NULL)
current.asrt
current.asrt <- rmboundary.asrtests(current.asrt)
current.asrt
head(data)
data <- ST01[[16]] # starch
str(data)
lev2 <- colnames(data)[c(1:5,9,10)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
data1 <- na.omit(data)
head(data1)
data2 <- dplyr::filter(year = 2019)
data2 <- dplyr::filter(year = "2019")
data2 <- data %>% dplyr::filter(year %in% "2019")
View(data2)
levels(data2$cut)
levels(data2$cut)
data2$cut <- recode_factor(data2$cut, "4" = "1", "5" = "2", "6" = "3", "7" = "4", "8" = "5")
levels(data2$cut)
data2 <- data %>% dplyr::filter(year %in% "2019")
levels(data2$cut)
data2 <- data %>% dplyr::filter(year %in% "2019")
levels(data2$cut)
data2$cut <- recode_factor(data2$cut,
"1"="N4",
"2"="N5",
"3"="N6",
"4"="N7",
"5"="N8")
levels(data2$cut)
summary(data2$cut)
data2$cut <- recode_factor(data2$cut,
"N4"="4",
"N5"="5",
"N6"="6",
"N7"="7",
"N8"="8")
levels(data2$cut)
summary(data2$cut)
data2 <- data %>% dplyr::filter(year %in% "2019")
str(data2)
data2$cut <- as.numeric(data2$cut)
summary(data2$cut)
data2$cut <- data2$cut + 3
summary(data2$cut)
data2$cut <- as.factor(data2$cut)
summary(data2$cut)
head(data)
data <- ST01[[16]] # starch
data <- ST01[[16]] # starch
data <- data %>% unite("year_cut", c(year, cut), sep = "_", remove = F)
head(data)
colnames(data)
lev2 <- colnames(data)[c(1:6,10,11)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
str(data)
levels(data$year_cut)
data <- ST01[[1]] # ADF
data <- data %>% unite("year_cut", c(year, cut), sep = "_", remove = F)
head(data)
str(data)
lev2 <- colnames(data)[c(1:6,10,11)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
str(data)
levels(data$year_cut)
data$year_cut <- as.numeric(data$year_cut)
data$year_cut <- as.factor(data$year_cut)
data$year_cut <- recode_factor(data$year_cut,
"2018_1"="1",
"2018_2"="2",
"2018_3"="3",
"2019_1"="4",
"2019_2"="5",
"2019_3"="6",
"2019_4"="7",
"2019_5"="8")
levels(data$year_cut)
head(data)
levels(data$year_cut)
summary(data2$cut)
rm(data2)
summary(data$year_cut)
data1 <- na.omit(data)
head(data1)
M4 <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ante(year_cut):id(gen) + us(loc):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(year_cut):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(year_cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut:loc, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut/loc, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
levels(data$year_cut)
data <- data %>% dplyr::filter(loc %in% c("WA"))
data1 <- na.omit(data)
head(data1)
View(data1)
M4 <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ante(cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ante(year_cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ar1(year_cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
summary(M4)$varcomp
M4 <- asreml::asreml(fixed = predicted.value ~ FD,
random = ~ ante(cut, 2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
summary(M4)$varcomp
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
summary(M4)$varcomp
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 2):ante(year,1):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 2):ante(year,2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
data <- ST01[[1]] # ADF
data <- data %>% unite("year_cut", c(year, cut), sep = "_", remove = F)
head(data)
str(data)
lev2 <- colnames(data)[c(1:6,10,11)]
data <- as.data.frame(data)
data[,lev2] <- lapply(data[,lev2], factor)
head(data)
data$year_cut <- recode_factor(data$year_cut,
"2018_1"="1",
"2018_2"="2",
"2018_3"="3",
"2019_1"="4",
"2019_2"="5",
"2019_3"="6",
"2019_4"="7",
"2019_5"="8")
levels(data$year_cut)
summary(data$year_cut)
data1 <- na.omit(data)
head(data1)
M4 <- asreml::asreml(fixed = predicted.value ~ FD + loc,
random = ~ ante(cut, 2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(cut, 2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
summary(M4)$varcomp
head(data1)
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(year_cut, 2):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(cut, 2):id(year),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(cut, 2):id(gen) + year,
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
wald(M4)
summary(M4)$varcomp
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(cut, 2):id(gen) + us(loc),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
M4 <- asreml::asreml(fixed = predicted.value ~ FD * loc,
random = ~ ante(cut, 2):id(gen) + us(loc):id(gen),
data = data1, na.action = list(x = "include", y = "include"),
weights = weight, family = asreml::asr_gaussian(dispersion = 1))
